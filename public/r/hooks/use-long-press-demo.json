{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-long-press-demo",
  "type": "registry:hook",
  "files": [
    {
      "path": "registry/examples/use-long-press-demo.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { X } from \"lucide-react\"\nimport * as ReactDOM from \"react-dom\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  useLongPress,\n  type LongPressCallback,\n} from \"registry/hooks/use-long-press\"\n\nexport default function UseLongPressDemo() {\n  const [open, setOpen] = React.useState(false)\n\n  const handleLongPress: LongPressCallback = (event) => {\n    console.log(\"Long press detected!\", event)\n  }\n\n  const handleStart: LongPressCallback = (event) => {\n    console.log(\"Press started\", event)\n  }\n\n  const handleFinish: LongPressCallback = (event) => {\n    console.log(\"Press finished\", event)\n    setOpen(true)\n  }\n\n  const handleCancel: LongPressCallback = (event) => {\n    console.log(\"Press cancelled\", event)\n  }\n\n  const buttonHandlers = useLongPress(handleLongPress, {\n    threshold: 500,\n    onStart: handleStart,\n    onFinish: handleFinish,\n    onCancel: handleCancel,\n  })\n\n  React.useEffect(() => {\n    const originalOverflow = document.body.style.overflow\n    const originalPaddingRight = document.body.style.paddingRight\n    const scrollbarWidth =\n      window.innerWidth - document.documentElement.clientWidth\n\n    if (open) {\n      document.body.style.overflow = \"hidden\"\n      document.body.style.paddingRight = `${scrollbarWidth}px`\n    } else {\n      document.body.style.overflow = originalOverflow\n      document.body.style.paddingRight = originalPaddingRight\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow\n      document.body.style.paddingRight = originalPaddingRight\n    }\n  }, [open])\n\n  return (\n    <div className=\"space-y-4 text-center\">\n      <Button {...buttonHandlers}>Press and hold me</Button>\n      <p className=\"text-muted-foreground text-balance\">\n        Open the console to see the logs\n      </p>\n      {open && <Demo setOpen={setOpen} />}\n    </div>\n  )\n}\n\nfunction Demo({ setOpen }: { setOpen: (open: boolean) => void }) {\n  if (typeof window === \"object\") {\n    return ReactDOM.createPortal(\n      <>\n        <div\n          className=\"fixed inset-0 bg-black/40 backdrop-blur-sm z-[998]\"\n          onClick={() => setOpen(false)}\n        />\n        <dialog className=\"fixed left-1/2 right-1/2 top-1/2 z-[999] grid w-[95%] md:w-full max-w-lg -translate-x-1/2 -translate-y-1/2 h-60 rounded-xl border bg-background p-4 text-muted-foreground shadow-md\">\n          <div className=\"relative flex justify-center items-center h-full\">\n            <X\n              size={18}\n              className=\"absolute top-1 right-1 cursor-pointer\"\n              onClick={() => setOpen(false)}\n            />\n            <p className=\"text-center text-balance\">\n              This is a dialog that opens when you press and hold the button for\n              500ms or more. The button also triggers a long press event. Open\n              the console to see the logs.\n            </p>\n          </div>\n        </dialog>\n      </>,\n      document.body\n    )\n  }\n\n  return <></>\n}\n",
      "type": "registry:hook"
    }
  ]
}
