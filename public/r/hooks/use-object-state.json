{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-object-state",
  "type": "registry:hook",
  "title": "Use Object State",
  "description": "Manage complex state objects with useObjectState.",
  "files": [
    {
      "path": "registry/hooks/use-object-state.tsx",
      "content": "import * as React from \"react\"\n\nfunction isPlainObject(obj: any): obj is object {\n  return typeof obj === \"object\" && obj !== null && obj.constructor === Object\n}\n\nexport function useObjectState<T extends object>(\n  initialValue: T\n): [T, (update: Partial<T> | ((prevState: T) => Partial<T>)) => void] {\n  const [state, setState] = React.useState<T>(initialValue)\n\n  const handleUpdate = React.useCallback(\n    (arg: Partial<T> | ((prevState: T) => Partial<T>)) => {\n      if (typeof arg === \"function\") {\n        setState((s) => {\n          const newState = arg(s)\n          if (isPlainObject(newState)) {\n            return { ...s, ...newState }\n          }\n          return s\n        })\n      } else if (isPlainObject(arg)) {\n        setState((s) => ({ ...s, ...arg }))\n      }\n    },\n    []\n  )\n\n  return [state, handleUpdate]\n}\n",
      "type": "registry:hook"
    }
  ]
}
