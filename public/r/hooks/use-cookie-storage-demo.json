{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-cookie-storage-demo",
  "type": "registry:hook",
  "files": [
    {
      "path": "registry/examples/use-cookie-storage-demo.tsx",
      "content": "import { Badge } from \"@/components/ui/badge\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { useCookieStorage } from \"registry/hooks/use-cookie-storage\"\n\ninterface UserPreferences {\n  theme: \"light\" | \"dark\"\n  fontSize: number\n}\n\nexport default function UseCookieStorageDemo() {\n  const [username, setUsername] = useCookieStorage(\"username\", \"guest\", {\n    path: \"/\",\n    expires: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n    sameSite: \"Lax\",\n  })\n\n  const [preferences, setPreferences] = useCookieStorage<UserPreferences>(\n    \"preferences\",\n    { theme: \"light\", fontSize: 16 },\n    { path: \"/\", secure: true }\n  )\n\n  return (\n    <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n      <div className=\"space-y-2\">\n        <Label>Username</Label>\n        <Input\n          value={username}\n          placeholder=\"Username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label>Preferences</Label>\n        <Select\n          defaultValue={preferences.theme}\n          value={preferences.theme}\n          onValueChange={(value) =>\n            setPreferences((prev) => ({\n              ...prev,\n              theme: value as \"light\" | \"dark\",\n            }))\n          }\n        >\n          <SelectTrigger className=\"w-full\">\n            <SelectValue placeholder=\"Theme\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"light\">Light</SelectItem>\n            <SelectItem value=\"dark\">Dark</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label>Font Size</Label>\n        <Input\n          type=\"number\"\n          placeholder=\"Font Size\"\n          value={preferences.fontSize}\n          onChange={(e) =>\n            setPreferences((prev) => ({\n              ...prev,\n              fontSize: Number(e.target.value),\n            }))\n          }\n        />\n      </div>\n\n      <div className=\"col-span-full space-y-2 flex flex-col justify-center items-center\">\n        <h3 className=\"text-lg font-semibold underline\">Results</h3>\n        <div className=\"text-sm space-y-2\">\n          <p>Username: {username}</p>\n          <div className=\"flex items-center gap-2\">\n            Theme: <Badge className=\"capitalize\">{preferences.theme}</Badge>\n          </div>\n          <p>Font Size: {preferences.fontSize}px</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:hook"
    }
  ]
}
