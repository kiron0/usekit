{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-history-state-demo",
  "type": "registry:hook",
  "files": [
    {
      "path": "registry/examples/use-history-state-demo.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Trash } from \"lucide-react\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { useHistoryState } from \"registry/hooks/use-history-state\"\n\ninterface TodoItem {\n  id: string\n  name: string\n}\n\nexport default function UseHistoryStateDemo() {\n  const { state, set, undo, redo, clear, canUndo, canRedo } = useHistoryState<{\n    items: TodoItem[]\n  }>({ items: [] })\n\n  const addTodo = (val: string) => {\n    set({\n      ...state,\n      items: [...state.items, { id: crypto.randomUUID(), name: val }],\n    })\n  }\n\n  const removeTodo = (id: string) => {\n    set({\n      ...state,\n      items: state.items.filter((item) => item.id !== id),\n    })\n  }\n\n  return (\n    <div className=\"space-y-5 w-full\">\n      <div className=\"w-full space-y-5\">\n        <div className=\"flex items-center gap-3\">\n          <Button disabled={!canUndo} onClick={undo}>\n            Undo\n          </Button>\n          <Button disabled={!canRedo} onClick={redo}>\n            Redo\n          </Button>\n          <Button disabled={!state.items.length} onClick={clear}>\n            Clear\n          </Button>\n        </div>\n        <Form addItem={addTodo} />\n      </div>\n      <div className=\"w-full space-y-2\">\n        {state.items.map((item) => (\n          <div\n            key={item.id}\n            className=\"flex items-center justify-between gap-3 rounded-md border px-2 py-2\"\n          >\n            <span>{item.name}</span>\n            <Button\n              variant=\"destructive\"\n              size=\"icon\"\n              onClick={() => removeTodo(item.id)}\n            >\n              <Trash size={16} />\n            </Button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\ninterface FormProps {\n  addItem: (val: string) => void\n}\n\nfunction Form({ addItem }: FormProps) {\n  const [input, setInput] = React.useState(\"\")\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!input.trim()) return\n    addItem(input)\n    setInput(\"\")\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"w-full max-w-md space-y-2\">\n      <Input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter todo\"\n      />\n      <Button type=\"submit\" disabled={!input.trim()}>\n        Add\n      </Button>\n    </form>\n  )\n}\n",
      "type": "registry:hook"
    }
  ]
}
