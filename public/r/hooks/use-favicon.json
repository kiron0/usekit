{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-favicon",
  "type": "registry:hook",
  "title": "Use Favicon",
  "description": "Dynamically update the favicon of a webpage with useFavicon.",
  "files": [
    {
      "path": "registry/hooks/use-favicon.tsx",
      "content": "import * as React from \"react\"\n\nexport function useFavicon(url: string) {\n  const originalHref = React.useRef<string | null>(null)\n  const isLinkCreated = React.useRef(false)\n  const linkRef = React.useRef<HTMLLinkElement | null>(null)\n\n  React.useEffect(() => {\n    if (!url) {\n      throw new Error(\"Invalid favicon URL: URL cannot be empty.\")\n    }\n\n    const img = new Image()\n    img.src = url\n\n    img.onload = () => {\n      const existingLink =\n        document.querySelector<HTMLLinkElement>('link[rel~=\"icon\"]')\n\n      if (existingLink) {\n        originalHref.current = existingLink.href\n        linkRef.current = existingLink\n      } else {\n        const newLink = document.createElement(\"link\")\n        newLink.rel = \"icon\"\n        newLink.type = \"image/x-icon\"\n        newLink.href = url\n        document.head.appendChild(newLink)\n        linkRef.current = newLink\n        isLinkCreated.current = true\n      }\n    }\n\n    img.onerror = () => {\n      throw new Error(`Invalid favicon URL: ${url} is not a valid image.`)\n    }\n  }, [url])\n\n  React.useEffect(() => {\n    if (linkRef.current) {\n      linkRef.current.href = url\n    }\n  }, [url])\n\n  React.useEffect(() => {\n    return () => {\n      if (!linkRef.current) return\n\n      if (isLinkCreated.current) {\n        document.head.removeChild(linkRef.current)\n      } else if (originalHref.current) {\n        linkRef.current.href = originalHref.current\n      }\n    }\n  }, [])\n}\n",
      "type": "registry:hook"
    }
  ]
}
