{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-favicon",
  "type": "registry:hook",
  "title": "Use Favicon",
  "description": "Dynamically update the favicon of a webpage with useFavicon.",
  "files": [
    {
      "path": "registry/hooks/use-favicon.tsx",
      "content": "import * as React from \"react\"\r\n\r\nexport function useFavicon(url: string) {\r\n  const originalHref = React.useRef<string | null>(null)\r\n  const isLinkCreated = React.useRef(false)\r\n  const linkRef = React.useRef<HTMLLinkElement | null>(null)\r\n\r\n  React.useEffect(() => {\r\n    if (!url || typeof url !== \"string\") {\r\n      console.warn(\"useFavicon: Invalid favicon URL provided.\")\r\n      return\r\n    }\r\n\r\n    if (linkRef.current?.href === url) {\r\n      return\r\n    }\r\n\r\n    const img = new Image()\r\n    img.src = url\r\n\r\n    const handleLoad = () => {\r\n      const existingLink =\r\n        document.querySelector<HTMLLinkElement>('link[rel=\"icon\"]')\r\n\r\n      if (existingLink) {\r\n        if (originalHref.current === null) {\r\n          originalHref.current = existingLink.href\r\n        }\r\n        linkRef.current = existingLink\r\n      } else {\r\n        const newLink = document.createElement(\"link\")\r\n        newLink.rel = \"icon\"\r\n        newLink.type = getImageType(url)\r\n        newLink.href = url\r\n        document.head.appendChild(newLink)\r\n        linkRef.current = newLink\r\n        isLinkCreated.current = true\r\n      }\r\n\r\n      // Update href after link is set\r\n      if (linkRef.current) {\r\n        linkRef.current.href = url\r\n      }\r\n    }\r\n\r\n    const handleError = () => {\r\n      console.error(`useFavicon: Failed to load favicon from ${url}`)\r\n    }\r\n\r\n    img.addEventListener(\"load\", handleLoad)\r\n    img.addEventListener(\"error\", handleError)\r\n\r\n    return () => {\r\n      img.removeEventListener(\"load\", handleLoad)\r\n      img.removeEventListener(\"error\", handleError)\r\n    }\r\n  }, [url])\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      const link = linkRef.current\r\n      if (!link) return\r\n\r\n      if (isLinkCreated.current) {\r\n        link.parentNode?.removeChild(link)\r\n      } else if (originalHref.current) {\r\n        link.href = originalHref.current\r\n      }\r\n    }\r\n  }, [])\r\n}\r\n\r\nfunction getImageType(url: string): string {\r\n  const extension = url.split(\".\").pop()?.toLowerCase()\r\n  switch (extension) {\r\n    case \"ico\":\r\n      return \"image/x-icon\"\r\n    case \"png\":\r\n      return \"image/png\"\r\n    case \"jpg\":\r\n    case \"jpeg\":\r\n      return \"image/jpeg\"\r\n    case \"gif\":\r\n      return \"image/gif\"\r\n    default:\r\n      return \"image/x-icon\"\r\n  }\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
