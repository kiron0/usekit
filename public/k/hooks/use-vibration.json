{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-vibration",
  "type": "registry:hook",
  "title": "Use Vibration",
  "description": "Use the useVibration hook to control the vibration of a device, with options for duration and pattern.",
  "files": [
    {
      "path": "registry/hooks/use-vibration.ts",
      "content": "import * as React from \"react\"\n\ntype Pattern = number | number[]\n\ninterface Options {\n  loop?: boolean\n}\n\ninterface Return {\n  vibrate: (pattern?: Pattern) => void\n  stop: () => void\n  isSupported: boolean\n  isVibrating: boolean\n}\n\nexport function useVibration(\n  defaultPattern: Pattern = 100,\n  options: Options = {}\n): Return {\n  const isSupported = React.useMemo(() => \"vibrate\" in navigator, [])\n\n  const [isVibrating, setIsVibrating] = React.useState(false)\n\n  const vibrate = React.useCallback(\n    (pattern: Pattern = defaultPattern) => {\n      if (!isSupported) return\n\n      try {\n        const normalizedPattern = Array.isArray(pattern)\n          ? pattern.filter((n) => Number.isFinite(n) && n >= 0)\n          : Number.isFinite(pattern) && pattern >= 0\n            ? pattern\n            : defaultPattern\n\n        navigator.vibrate(\n          options.loop\n            ? Array(100).fill(normalizedPattern).flat()\n            : normalizedPattern\n        )\n\n        if (!options.loop) {\n          setTimeout(\n            () => setIsVibrating(false),\n            Array.isArray(normalizedPattern)\n              ? normalizedPattern.reduce((a, b) => a + b, 0)\n              : normalizedPattern\n          )\n        }\n\n        setIsVibrating(true)\n      } catch (error) {\n        console.error(\"Vibration failed:\", error)\n      }\n    },\n    [isSupported, defaultPattern, options.loop]\n  )\n\n  const stop = React.useCallback(() => {\n    if (!isSupported) return\n\n    navigator.vibrate(0)\n    setIsVibrating(false)\n  }, [isSupported])\n\n  return { vibrate, stop, isSupported, isVibrating }\n}\n",
      "type": "registry:hook"
    }
  ]
}
