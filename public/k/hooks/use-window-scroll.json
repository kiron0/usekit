{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-window-scroll",
  "type": "registry:hook",
  "title": "Use Window Scroll",
  "description": "Track and manipulate the scroll position of a web page with useWindowScroll.",
  "files": [
    {
      "path": "registry/hooks/use-window-scroll.ts",
      "content": "import * as React from \"react\"\r\n\r\ninterface ScrollState {\r\n  x: number | null\r\n  y: number | null\r\n}\r\n\r\ninterface ScrollToOptions {\r\n  top?: number\r\n  left?: number\r\n  behavior?: ScrollBehavior\r\n}\r\n\r\ntype ScrollToFunction = (\r\n  optionsOrX: ScrollToOptions | number,\r\n  y?: number,\r\n  behavior?: ScrollBehavior\r\n) => void\r\n\r\nexport function useWindowScroll(): [ScrollState, ScrollToFunction] {\r\n  const [state, setState] = React.useState<ScrollState>({\r\n    x: null,\r\n    y: null,\r\n  })\r\n\r\n  const scrollTo: ScrollToFunction = React.useCallback((...args) => {\r\n    if (typeof window === \"undefined\") return\r\n\r\n    if (typeof args[0] === \"object\") {\r\n      window.scrollTo(args[0])\r\n    } else if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\r\n      const [x, y, behavior] = args as [\r\n        number,\r\n        number,\r\n        ScrollBehavior | undefined,\r\n      ]\r\n      window.scrollTo({ top: y, left: x, behavior })\r\n    } else {\r\n      throw new Error(\r\n        `Invalid arguments passed to scrollTo. See: https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo`\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (typeof window === \"undefined\") return\r\n\r\n    const handleScroll = () => {\r\n      setState({ x: window.scrollX, y: window.scrollY })\r\n    }\r\n\r\n    handleScroll()\r\n    window.addEventListener(\"scroll\", handleScroll)\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll)\r\n  }, [])\r\n\r\n  return [state, scrollTo]\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
