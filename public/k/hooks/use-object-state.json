{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-object-state",
  "type": "registry:hook",
  "title": "Use Object State",
  "description": "Manage complex state objects with useObjectState.",
  "files": [
    {
      "path": "registry/hooks/use-object-state.ts",
      "content": "import * as React from \"react\"\r\n\r\nfunction isPlainObject(obj: any): obj is object {\r\n  return typeof obj === \"object\" && obj !== null && obj.constructor === Object\r\n}\r\n\r\nexport function useObjectState<T extends object>(\r\n  initialValue: T\r\n): [T, (update: Partial<T> | ((prevState: T) => Partial<T>)) => void] {\r\n  const [state, setState] = React.useState<T>(initialValue)\r\n\r\n  const handleUpdate = React.useCallback(\r\n    (arg: Partial<T> | ((prevState: T) => Partial<T>)) => {\r\n      if (typeof arg === \"function\") {\r\n        setState((prev) => {\r\n          const update = arg(prev)\r\n          return isPlainObject(update) ? { ...prev, ...update } : prev\r\n        })\r\n      } else {\r\n        setState((prev) => ({ ...prev, ...arg }))\r\n      }\r\n    },\r\n    []\r\n  )\r\n\r\n  return [state, handleUpdate]\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
