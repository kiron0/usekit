{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-window-size",
  "type": "registry:hook",
  "title": "Use Window Size",
  "description": "Track the dimensions of the browser window with useWindowSize.",
  "files": [
    {
      "path": "registry/hooks/use-window-size.ts",
      "content": "import * as React from \"react\"\r\n\r\ninterface WindowSize {\r\n  innerHeight: number\r\n  innerWidth: number\r\n  outerHeight: number\r\n  outerWidth: number\r\n}\r\n\r\nfunction getSize() {\r\n  if (typeof window !== \"undefined\") {\r\n    return {\r\n      innerHeight: window.innerHeight,\r\n      innerWidth: window.innerWidth,\r\n      outerHeight: window.outerHeight,\r\n      outerWidth: window.outerWidth,\r\n    }\r\n  }\r\n  return {\r\n    innerHeight: 0,\r\n    innerWidth: 0,\r\n    outerHeight: 0,\r\n    outerWidth: 0,\r\n  }\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = React.useState(getSize())\r\n\r\n  React.useEffect(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return\r\n    }\r\n\r\n    const handleResize = () => {\r\n      const newSize = getSize()\r\n      if (\r\n        newSize.innerHeight !== windowSize.innerHeight ||\r\n        newSize.innerWidth !== windowSize.innerWidth ||\r\n        newSize.outerHeight !== windowSize.outerHeight ||\r\n        newSize.outerWidth !== windowSize.outerWidth\r\n      ) {\r\n        setWindowSize(newSize)\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [windowSize])\r\n\r\n  return windowSize\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
