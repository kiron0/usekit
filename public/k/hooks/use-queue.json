{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-queue",
  "type": "registry:hook",
  "title": "Use Queue",
  "description": "Add, remove, and clear element from a queue data structure with useQueue.",
  "files": [
    {
      "path": "registry/hooks/use-queue.ts",
      "content": "import * as React from \"react\"\r\n\r\nexport function useQueue<T>(initialValue: T[] = []) {\r\n  const [queue, setQueue] = React.useState<T[]>(initialValue)\r\n\r\n  const add = React.useCallback((element: T) => {\r\n    setQueue((q) => [...q, element])\r\n  }, [])\r\n\r\n  const remove = React.useCallback(() => {\r\n    let removedElement: T | undefined\r\n\r\n    setQueue(([first, ...rest]) => {\r\n      removedElement = first\r\n      return rest\r\n    })\r\n\r\n    return removedElement\r\n  }, [])\r\n\r\n  const clear = React.useCallback(() => {\r\n    setQueue([])\r\n  }, [])\r\n\r\n  return {\r\n    add,\r\n    remove,\r\n    clear,\r\n    first: queue[0],\r\n    last: queue[queue.length - 1],\r\n    size: queue.length,\r\n    queue,\r\n  }\r\n}\r\n\r\nexport interface Queue<T> {\r\n  add: (element: T) => void\r\n  remove: () => T | undefined\r\n  clear: () => void\r\n  first: T | undefined\r\n  last: T | undefined\r\n  size: number\r\n  queue: T[]\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
