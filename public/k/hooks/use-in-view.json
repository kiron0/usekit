{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-in-view",
  "type": "registry:hook",
  "title": "Use In View",
  "description": "Detect when an element is in the viewport with useInView, providing options for threshold and root margin.",
  "files": [
    {
      "path": "registry/hooks/use-in-view.ts",
      "content": "import * as React from \"react\"\n\ninterface Options {\n  threshold?: number\n  rootMargin?: string\n}\n\nexport default function useInView(\n  ref: React.RefObject<HTMLElement | null>,\n  { threshold = 0, rootMargin = \"0px\" }: Options = {}\n): boolean {\n  const [isInView, setIsInView] = React.useState(false)\n\n  React.useEffect(() => {\n    if (!ref.current) return\n\n    const currentElement = ref.current\n\n    const observer = new IntersectionObserver(\n      ([entry]) => setIsInView(entry.isIntersecting),\n      { threshold, rootMargin }\n    )\n\n    observer.observe(currentElement)\n    return () => observer.unobserve(currentElement)\n  }, [ref, threshold, rootMargin])\n\n  return isInView\n}\n",
      "type": "registry:hook"
    }
  ]
}
