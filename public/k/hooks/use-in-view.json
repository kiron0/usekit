{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-in-view",
  "type": "registry:hook",
  "title": "Use In View",
  "description": "Detect when an element is in the viewport with useInView, providing options for threshold and root margin.",
  "files": [
    {
      "path": "registry/hooks/use-in-view.ts",
      "content": "import * as React from \"react\"\r\n\r\ninterface Options {\r\n  threshold?: number\r\n  rootMargin?: string\r\n}\r\n\r\nexport default function useInView(\r\n  ref: React.RefObject<HTMLElement>,\r\n  { threshold = 0, rootMargin = \"0px\" }: Options = {}\r\n): boolean {\r\n  const [isInView, setIsInView] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (!ref.current) return\r\n\r\n    const currentElement = ref.current\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => setIsInView(entry.isIntersecting),\r\n      { threshold, rootMargin }\r\n    )\r\n\r\n    observer.observe(currentElement)\r\n    return () => observer.unobserve(currentElement)\r\n  }, [ref, threshold, rootMargin])\r\n\r\n  return isInView\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
