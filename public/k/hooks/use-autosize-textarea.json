{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-autosize-textarea",
  "type": "registry:hook",
  "title": "Use Autosize Textarea",
  "description": "Automatically resize a textarea to fit its content with useAutosizeTextarea.",
  "files": [
    {
      "path": "registry/hooks/use-autosize-textarea.ts",
      "content": "import * as React from \"react\"\r\n\r\ninterface Props {\r\n  ref: React.RefObject<HTMLTextAreaElement | null>\r\n  maxHeight?: number\r\n  borderWidth?: number\r\n  dependencies: React.DependencyList\r\n}\r\n\r\nexport function useAutosizeTextArea({\r\n  ref,\r\n  maxHeight = Number.MAX_SAFE_INTEGER,\r\n  borderWidth = 0,\r\n  dependencies,\r\n}: Props) {\r\n  const originalHeight = React.useRef<number | null>(null)\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) return\r\n\r\n    const currentRef = ref.current\r\n    const borderAdjustment = borderWidth * 2\r\n\r\n    if (originalHeight.current === null) {\r\n      originalHeight.current = currentRef.scrollHeight - borderAdjustment\r\n    }\r\n\r\n    currentRef.style.removeProperty(\"height\")\r\n    const scrollHeight = currentRef.scrollHeight\r\n\r\n    const clampedToMax = Math.min(scrollHeight, maxHeight)\r\n    const clampedToMin = Math.max(clampedToMax, originalHeight.current)\r\n\r\n    currentRef.style.height = `${clampedToMin + borderAdjustment}px`\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [maxHeight, ref, ...dependencies])\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
