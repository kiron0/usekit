{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-hover",
  "type": "registry:hook",
  "title": "Use Hover",
  "description": "Track whether an element is being hovered over with useHover.",
  "files": [
    {
      "path": "registry/hooks/use-hover.ts",
      "content": "import * as React from \"react\"\r\n\r\ntype HoverRef = (node: Element | null) => void\r\n\r\nexport function useHover(): [HoverRef, boolean] {\r\n  const [element, setElement] = React.useState<Element | null>(null)\r\n  const [hovering, setHovering] = React.useState(false)\r\n\r\n  const ref = React.useCallback<HoverRef>((node) => {\r\n    setElement(node)\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (!element) return\r\n\r\n    const handleMouseEnter = () => setHovering(true)\r\n    const handleMouseLeave = () => setHovering(false)\r\n\r\n    element.addEventListener(\"mouseenter\", handleMouseEnter)\r\n    element.addEventListener(\"mouseleave\", handleMouseLeave)\r\n\r\n    return () => {\r\n      element.removeEventListener(\"mouseenter\", handleMouseEnter)\r\n      element.removeEventListener(\"mouseleave\", handleMouseLeave)\r\n    }\r\n  }, [element])\r\n\r\n  return [ref, hovering]\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
