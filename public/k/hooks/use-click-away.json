{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-click-away",
  "type": "registry:hook",
  "title": "Use Click Away",
  "description": "Detect clicks outside of specific component with useClickAway.",
  "files": [
    {
      "path": "registry/hooks/use-click-away.ts",
      "content": "import * as React from \"react\"\r\n\r\ntype ClickAwayCallback = (event: MouseEvent | TouchEvent) => void\r\n\r\nexport function useClickAway<T extends HTMLElement = HTMLElement>(\r\n  callback: ClickAwayCallback\r\n): React.RefObject<T> {\r\n  const ref = React.useRef<T>(null)\r\n  const callbackRef = React.useRef(callback)\r\n\r\n  React.useEffect(() => {\r\n    callbackRef.current = callback\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\r\n      const element = ref.current\r\n      if (element && !element.contains(event.target as Node)) {\r\n        callbackRef.current(event)\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside)\r\n    document.addEventListener(\"touchstart\", handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside)\r\n      document.removeEventListener(\"touchstart\", handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return ref as React.RefObject<T>\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
